---
title: "Rush hour subways surprisingly excel at punctuality: a closer look at TTC Delays"
subtitle: "Insight into when delays disproportionately tend to happen and related statistics"
author: 
  - Andrew Goh, Yisu Hou, Jiwon Choi
thanks: "Code and data are available at: https://github.com/mushroomcarbon/TTCDelays."
date: today
date-format: long
abstract: "This paper uses data from Open Data Toronto on TTC subway and bus
delays to analyze how the delays are generally distributed w.r.t. the time of day. Mean, total, and adjusted statistics were graphed, leading to the conclusions that subways are almost always
more punctual than buses, peak hour leads to the fewest delays, and leaving 10-15 minutes earlier is a safe margin of error for delays. The conclusions of this paper provide a practical, actionable set of guidelines on how citizens can ensure/maximize punctuality when using the TTC to go about the city, as well as potential insight into where resources can be invested in to increase TTC efficiency the most."
format: pdf
number-sections: true
bibliography: references.bib
header-includes:
  - \usepackage{placeins}
---

# Introduction

Write Introduction here

# Data {#sec-mydatasection}

The R programming language (@talia), dplyr (@dplyr), opendatatoronto(@opendatatoronto), and tidyverse(@thereferencecanbewhatever) were used to download, modify, and analyse data obtained from Open Data Toronto. Styler (@styler) was used to style the code. Data used in this paper comes from the "TTC Subway Delays" (@subway_data) and "TTC Bus Delays" (@bus_data) data sets from the Open Data Toronto database, published by the TTC.



```{r}
#| label: fig-dance
#| fig-cap: Danceability Over Album Release Years
#| echo: false
#| warning: false
#| message: false

library(tidyverse)
library(dplyr)
library(here)

# Load the data
data <- read_rds(here::here("data/the_national.rds"))

# Plot 1: danceability over time
ggplot(data, aes(x = album_release_year, y = danceability)) +
  geom_point(alpha = 0.7, color = "black") + 
  stat_summary(fun = mean, geom = "line", color = "green", size = 1.2) + 
  labs(
    x = "Album Release Year",
    y = "Danceability"
  ) +
  theme_minimal()
```

```{r}
#| label: fig-energy
#| fig-cap: Energy Over Album Release Years
#| echo: false
#| warning: false
#| message: false

# Plot 2: energy over time
ggplot(data, aes(x = album_release_year, y = energy)) +
  geom_point(alpha = 0.7, color = "black") +
  stat_summary(fun = mean, geom = "line", color = "blue", size = 1.2) +
  labs(
    x = "Album Release Year",
    y = "Energy"
  ) +
  theme_minimal()
```

```{r}
#| label: fig-instrumental
#| fig-cap: Instrumentalness Over Album Release Years
#| echo: false
#| warning: false
#| message: false

# Plot 3: instrumentalness over time
ggplot(data, aes(x = album_release_year, y = instrumentalness)) +
  geom_point(alpha = 0.7, color = "black") +
  stat_summary(fun = mean, geom = "line", color = "red", size = 1.2) +
  labs(
    x = "Album Release Year",
    y = "Instrumentalness"
  ) +
  theme_minimal()
```

```{r}
#| label: fig-valence
#| fig-cap: Valence Over Album Release Years
#| echo: false
#| warning: false
#| message: false

# Plot 4: valence over time
ggplot(data, aes(x = album_release_year, y = valence)) +
  geom_point(alpha = 0.7, color = "black") +
  stat_summary(fun = mean, geom = "line", color = "orange", size = 1.2) +
  labs(
    x = "Album Release Year",
    y = "Valence"
  ) +
  theme_minimal()
```
\FloatBarrier

